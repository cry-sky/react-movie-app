{"version":3,"sources":["components/MovieItem.js","components/MovieTabs.js","components/App.js","utils/api.js","serviceWorker.js","index.js"],"names":["MovieItem","state","willWatch","this","props","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","className","style","width","src","backdrop_path","poster_path","alt","textAlign","dispay","height","marginBottom","title","paddingLeft","release_date","vote_average","type","onClick","setState","position","bottom","right","border","padding","backgroundColor","top","fontSize","bind","React","Component","MovieTabs","sort_by","updateSortBy","handleClick","value","event","getClassLink","App","getMovie","fetch","page","then","response","json","data","console","log","movies","results","total_pages","updateMovies","filter","item","id","updateMoviesWillWatch","moviesWillWatch","updatePage","prevProps","prevState","col-1","display","justifyContent","left","textDecoration","map","key","href","col-2","length","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a529135.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass MovieItem extends React.Component{\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      willWatch: false\r\n    };\r\n  }\r\n  render(){\r\n      const{ movie, removeMovie, addMovieToWillWatch, removeMovieFromWillWatch } = this.props;\r\n      return(\r\n        <div className=\"card\">\r\n        <div className=\"card-img\"><img style={{width: \"100%\"}} className=\"card-img-top\"\r\n        src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\r\n          movie.poster_path}`}\r\n          alt='' /></div>\r\n          <div className=\"card-body\">\r\n          <h2 className=\"card-title\" style={{textAlign:\"center\",dispay:\"block\",width:\"100%\",height:\"50px\",marginBottom:\"50px\"}}>{movie.title}</h2>\r\n          <p style={{paddingLeft: \"15px\"}}><strong>Release:</strong> {movie.release_date}</p>\r\n          <div>\r\n          <p style={{paddingLeft: \"15px\"}}><strong>Rating:</strong> {movie.vote_average} &#128293;</p>\r\n          {this.state.willWatch ? \r\n               <button type=\"button\" onClick={() => {\r\n                this.setState({\r\n                  willWatch: false\r\n                })\r\n                removeMovieFromWillWatch(movie);\r\n              }}\r\n          style={{position:\"absolute\",bottom:\"10px\",right:\"10px\",border:\"solid 1px transparent\",padding:\"5px\",backgroundColor:\"rgba(255,100,0,.5)\"}}>\r\n          Remove Will Watch\r\n          </button> :\r\n          <button type=\"button\" onClick={() => {\r\n            this.setState({\r\n              willWatch: true\r\n            });\r\n            addMovieToWillWatch(movie);\r\n          }}\r\n          style={{position:\"absolute\",bottom:\"10px\",right:\"10px\",border:\"solid 1px transparent\",padding:\"5px\",backgroundColor:\"rgba(0,200,0,.5)\"}}>\r\n          Add Will Watch\r\n          </button>\r\n          }\r\n          \r\n          </div>\r\n          <button type=\"button\" style={{\r\n            position:\"absolute\",top:\"10px\",right:\"10px\",fontSize:\"20px\",backgroundColor:\"rgba(255,100,100,1)\",border:\"solid 1px transparent\" \r\n          }} onClick={removeMovie.bind(null, movie)}>\r\n          X\r\n          </button>\r\n          </div>\r\n          </div>\r\n          );\r\n    }\r\n  }\r\n\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\n\r\nconst MovieTabs = (props) =>{\r\n\tconst { sort_by, updateSortBy } = props;\r\n\tconst handleClick = (value) =>{\r\n\t\treturn (event => {\r\n\t\t\tupdateSortBy(value);\r\n\t\t})\t\r\n\t}\r\n\tconst getClassLink = (value) => {\r\n\t\treturn `${sort_by === value ? \"active\" : \"\" }`\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"tabs\">\r\n\t\t<button className={getClassLink(\"popularity.desc\")}\r\n\t\tonClick={handleClick(\"popularity.desc\")}\r\n\t\t>Popularity desc</button>\r\n\t\t<button className={getClassLink(\"revenue.desc\")}\r\n\t\tonClick={handleClick(\"revenue.desc\")}\r\n\t\t>Revenuen desc</button>\r\n\t\t<button className={getClassLink(\"vote_average.desc\")}\r\n\t\tonClick={handleClick(\"vote_average.desc\")}\r\n\t\t>Vote average desc</button>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default MovieTabs","import React from 'react';\n// import { moviesData } from \"./moviesData\";\nimport MovieItem from \"./MovieItem\";\nimport { API_URL, API_KEY_3 } from \"../utils/api\"\nimport MovieTabs from \"./MovieTabs\"\n\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmovies:[],\n\t\t\tmoviesWillWatch:[],\n\t\t\tsort_by: \"popularity.desc\",\n\t\t\tpage:1\n\t\t\t\n\n\t\t};\n\t\t// this.removeMovie = this.removeMovie.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tthis.getMovie();\n\t}\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.log(\"didUpdate\");\n\t\tif (prevState.sort_by !== this.state.sort_by){\n\t\t\tthis.getMovie();\n\t\t}\n\t\tif (prevState.page !== this.state.page){\n\t\t\tthis.getMovie();\n\t\t}\n\t}\n\n\tgetMovie = () => {\n\t\tfetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`)\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.then((data) => {\n\t\t\tconsole.log(\"data\", data);\n\t\t\tthis.setState({\n\t\t\t\tdata:data,\n\t\t\t\tmovies:data.results,\n\t\t\t\tpage:data.page,\n\t\t\t\ttotal_pages:data.total_pages,\n\t\t\t});\n\t\t});\n\t}\n\n\n\tremoveMovie = movie => {\n\t\tconst updateMovies = this.state.movies.filter(function(item) {\n\t\t\treturn item.id !== movie.id;\n\t\t});\n\t\tconst updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(item) {\n\t\t\treturn item.id !== movie.id;\n\t\t});\n\t\tthis.setState({\n\t\t\tmovies: updateMovies,\n\t\t\tmoviesWillWatch: updateMoviesWillWatch\n\t\t});\n\t}\n\n\taddMovieToWillWatch = movie =>{\n\t\tconst updateMoviesWillWatch = [...this.state.moviesWillWatch, movie];\n\t\tthis.setState({\n\t\t\tmoviesWillWatch: updateMoviesWillWatch\n\t\t})\n\n\t};\n\n\tremoveMovieFromWillWatch = movie => {\n\t\tconst updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(item) {\n\t\t\treturn item.id !== movie.id;\n\t\t});\n\t\tthis.setState({\n\t\t\tmoviesWillWatch: updateMoviesWillWatch\n\t\t});\n\t};\n\tupdateSortBy = value => {\n\t\tthis.setState({\n\t\t\tsort_by:value\n\t\t});\n\t};\n\n\tupdatePage = value => {\n\t\tconst page=this.state.page;\n\t\tconst total_pages=this.total_pages;\n\t\tconst moviesWillWatch=this.state.moviesWillWatch;\n\t\tconst movies=this.state.movies;\n\t\tif (page >= 1 || page <= total_pages) {\n\t\t\tthis.setState({\n\t\t\t\tpage:value\t\n\t\t\t})\n\t}\n\t// for(var i=0;i<moviesWillWatch.length;i++){\n\t// \tfor(var j=0;j<movies.length;j++){\n\t// \t\tif(moviesWillWatch[i].id===movies[j].id){\n\t// \t\t\tconsole.log('1')\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t<div id=\"top\" col-1>\n\t\t\t\n\t\t\t<MovieTabs sort_by={this.state.sort_by} updateSortBy={this.updateSortBy} />\n\t\t\t\n\t\t\t<div style={{display:\"flex\",justifyContent:\"center\",padding:\"5px\"}}> \n\t\t\t<span style={{position:\"relative\"}}><a \n\t\t\tclassName={this.state.page === 1 ? 'disabled' : ''}\n\t\t\tonClick={() => this.updatePage(this.state.page - 1)}\n\t\t\tstyle={{position:\"absolute\",top:\"0\",left:\"-100%\",fontSize:\"20px\",backgroundColor:\"transparent\",border:\"transparent 1px solid\",textDecoration:\"none\"}}>&larr;</a>\n\t\t\t<span style={{fontSize:\"20px\"}}>{this.state.page}</span> in <span style={{fontSize:\"20px\"}}>{this.state.total_pages}</span> <a \n\t\t\tclassName={this.state.page === this.state.total_pages ? 'disabled' : ''}\n\t\t\tonClick={() => this.updatePage(this.state.page + 1)}\n\t\t\tstyle={{position:\"absolute\",top:\"0\",right:\"-100%\",fontSize:\"20px\",backgroundColor:\"transparent\",border:\"transparent 1px solid\",textDecoration:\"none\"}}>&rarr;</a>\n\t\t\t</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div>\n\t\t\t{this.state.movies.map(movie => {\n\t\t\t\treturn (<MovieItem \n\t\t\t\t\tkey={movie.id} \n\t\t\t\t\tmovie={movie} \n\t\t\t\t\tremoveMovie={this.removeMovie}\n\t\t\t\t\taddMovieToWillWatch={this.addMovieToWillWatch}\n\t\t\t\t\tremoveMovieFromWillWatch={this.removeMovieFromWillWatch}\n\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t})}\n\t\t\t</div>\n\t\t\t\n\t\t\t<div style={{display:\"flex\",justifyContent:\"center\",padding:\"5px\",position:\"relative\"}}> \n\t\t\t<span style={{position:\"relative\"}}><a href=\"#top\" \n\t\t\tclassName={this.state.page === 1 ? 'disabled' : ''}\n\t\t\tonClick={() => this.updatePage(this.state.page - 1)}\n\t\t\tstyle={{position:\"absolute\",top:\"0\",left:\"-100%\",fontSize:\"20px\",backgroundColor:\"transparent\",border:\"transparent 1px solid\",textDecoration:\"none\"}}>&larr;</a>\n\t\t\t<span style={{fontSize:\"20px\"}}>{this.state.page}</span> in <span style={{fontSize:\"20px\"}}>{this.state.total_pages}</span> <a  href=\"#top\"\n\t\t\tclassName={this.state.page === this.state.total_pages ? 'disabled' : ''}\n\t\t\tonClick={() => this.updatePage(this.state.page + 1)}\n\t\t\tstyle={{position:\"absolute\",top:\"0\",right:\"-100%\",fontSize:\"20px\",backgroundColor:\"transparent\",border:\"transparent 1px solid\",textDecoration:\"none\"}}>&rarr;</a>\n\t\t\t</span></div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\t<div col-2>\n\t\t\t<h1 style={{display:\"block\",width:\"160px\"}}>Movies: {this.state.moviesWillWatch.length}</h1>\n\t\t\t<ul>\n\t\t\t{this.state.moviesWillWatch.map(movie => (\n\t\t\t\t<li className=\"moviesWillWatch\">\n\t\t\t\t<div>\n\t\t\t\t<p style={{textAlign:\"center\"}}>{movie.title}</p> \n\t\t\t\t<p style={{marginLeft:\"40%\"}}>&#128293; {movie.vote_average}</p>\n\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}